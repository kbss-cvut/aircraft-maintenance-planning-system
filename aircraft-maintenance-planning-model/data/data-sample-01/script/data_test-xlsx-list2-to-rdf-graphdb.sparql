PREFIX : <http://example.com/resource/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX ms:  <http://onto.fel.cvut.cz/ontologies/maintenance-schema/> 
PREFIX cm: <http://onto.fel.cvut.cz/ontologies/csat-maintenance/>
PREFIX cmd: <http://onto.fel.cvut.cz/ontologies/csat-maintenance-data/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX spif: <http://spinrdf.org/spif#>
PREFIX ufo: <http://onto.fel.cvut.cz/ontologies/ufo/>
PREFIX ata: <http://onto.fel.cvut.cz/voc/ata-100/> 


CONSTRUCT {
    <http://onto.fel.cvut.cz/ontologies/csat-maintenance/list2> a owl:Ontology ;
              owl:imports <http://onto.fel.cvut.cz/ontologies/csat-maintenance> .
    
    # workpackage description
    ?workpackageIRI a cm:workpackage, owl:NamedIndividual;
                    cm:id ?WP.
                    

    # task execution description
    ?task_executionIRI a cm:complex-execution, ?task_typeIRI, owl:NamedIndividual;
                       cm:issue-time ?issue_date_D;
                       cm:end-time ?closing_date_D;
                       cm:has-work-order-step ?task_step_executionIRI;
					   cm:is-part-of-workpackage ?workpackageIRI.
    
    ?task_executionIRI cm:references-task ?referenced_task_executionIRI .

    # task execution type
    ?task_typeIRI a owl:Class;
                  rdfs:subClassOf ?task_super_classIRI;
                  cm:references-ata-code ?ataIRI;
				  cm:id ?CSAT_WO_TC.

    # task step execution
    ?task_step_executionIRI a ?task_step_execution_typeIRI, owl:NamedIndividual;
                            cm:step-index ?workstepTyped;
                            cm:work-order-text ?WO_text.
    
	?task_step_executionIRI cm:work-order-action-text ?WO_action .
	
    ?task_step_execution_typeIRI a owl:Class;
            rdfs:subClassOf cm:work-order-step.
			
	# aircraft description
	?workpackageIRI cm:is-repair-of ?aircraftIRI.
	?aircraftIRI a cm:aircraft, owl:NamedIndividual;
	cm:model ?acmodel;
	cm:age ?acage.

} WHERE {
    SERVICE <ontorefine:2514883026341> {
        ?row a :Row ;
			 :AC ?acmodel ;
             :A_C_age ?acage ;
             :WP ?WP ;
             :CSAT_WO_TC ?CSAT_WO_TC ; # use as id of task type
             :task_execution ?task_execution ; # based on CSAT_WO_TC
             :workpackage ?workpackage ;
             :type ?type ;
             :state ?state ;
             :task_type ?task_type ;
             :task_super_class ?task_super_class ;
             :issue_date ?issue_date ;
             :closing_date ?closing_date ;
             :workstep ?workstep ;
             :task_step_execution_type ?task_step_execution_type ;
             :task_step_execution ?task_step_execution ;
             :WO_text ?WO_text .
             
        
#        OPTIONAL{?row :Customer_ref ?Customer_ref .}
        OPTIONAL{
            ?row :ATA ?ATA .
            BIND(IRI(concat(str(ata:), "ata-", ?ATA)) as ?ataIRI)
        }
        OPTIONAL{
            ?row :TC_reference ?TC_reference ;
                 :referenced_task_execution ?referenced_task_execution ;
            BIND(iri(concat(str(cmd:), ?referenced_task_execution)) as ?referenced_task_executionIRI) # instance
        }
        OPTIONAL{
            ?row :WO_action ?WO_action .
        }
        
        BIND(iri(concat(str(cmd:), ?workpackage)) as ?workpackageIRI) # instance
        BIND(iri(concat(str(cmd:), ?task_execution)) as ?task_executionIRI) # instance
        BIND(IRI(concat(str(cmd:), ?acmodel, "-", ?workpackage)) as ?aircraftIRI) # instance
        BIND(iri(concat(str(cmd:), ?task_step_execution)) as ?task_step_executionIRI) # instance
        BIND(IRI(concat(str(cm:), ?task_type)) as ?task_typeIRI)
        BIND(IRI(concat(str(cm:), ?task_super_class)) as ?task_super_classIRI)
        BIND(IRI(concat(str(cm:), ?task_step_execution_type)) as ?task_step_execution_typeIRI)
        BIND(STRDT(str(?workstep), xsd:integer) as ?workstepTyped)
        

        BIND(spif:parseDate(?issue_date ,"dd.MM.yyyy") as ?issue_date_D)
        BIND(spif:parseDate(?closing_date ,"dd.MM.yyyy") as ?closing_date_D)
    }
}
