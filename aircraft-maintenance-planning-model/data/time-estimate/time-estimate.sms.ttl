# baseURI: http://onto.fel.cvut.cz/ontologies/csat/time-estimate-0.1
# imports: http://onto.fel.cvut.cz/ontologies/csat-maintenance
# imports: http://onto.fel.cvut.cz/ontologies/csat/tabular-data-0.1
# imports: http://onto.fel.cvut.cz/ontologies/csat/time-estimate-0.1/input-data-schema
# imports: http://onto.fel.cvut.cz/ontologies/s-pipes-lib

@prefix : <http://onto.fel.cvut.cz/ontologies/csat/time-estimate-0.1/> .
@prefix ata: <http://onto.fel.cvut.cz/voc/ata-100/> .
@prefix cm: <http://onto.fel.cvut.cz/ontologies/csat-maintenance/> .
@prefix cmd: <http://onto.fel.cvut.cz/ontologies/csat-maintenance-data/> .
@prefix config: <http://onto.fel.cvut.cz/ontologies/csat/config/> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix dl: <http://onto.fel.cvut.cz/ontologies/csat/data-lib/> .
@prefix doc: <http://onto.fel.cvut.cz/ontologies/documentation/> .
@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-sesame: <http://onto.fel.cvut.cz/ontologies/lib/module/sesame/> .
@prefix km-tabular: <http://onto.fel.cvut.cz/ontologies/lib/module/tabular/> .
@prefix ms: <http://onto.fel.cvut.cz/ontologies/maintenance-schema/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix td: <http://onto.fel.cvut.cz/ontologies/csat/tabular-data-0.1/> .
@prefix ufo: <http://onto.fel.cvut.cz/ontologies/ufo/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

td:bind-expected-table-schema
  sm:next td:rdfize-input-data ;
.
td:construct-maintenance-group-abbreviations
  sm:next td:rdfize-input-data ;
.
td:deploy-data_Return
  rdfs:label "deploy-time-estimate-data" ;
.
td:import-input-data-schema
  sml:baseURI [
      a sp:concat ;
      sp:arg1 [
          a sp:str ;
          sp:arg1 : ;
        ] ;
      sp:arg2 "input-data-schema" ;
    ] ;
.
td:import-scheme
  sm:next td:rdfize-input-data ;
.
td:rdfize-input-data
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 1.01 - column AC registration has empty value
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    FILTER NOT EXISTS {
          ?rd :AC_registration ?notExistValue .
    }
}""" ;
    ] ;
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 1.02 - column operator has empty value
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    FILTER NOT EXISTS {
          ?rd :operator ?notExistValue .
    }
}""" ;
    ] ;
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 1.03 - column WP has empty value
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    FILTER NOT EXISTS {
          ?rd :WP ?notExistValue .
    }
}""" ;
    ] ;
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 1.04 - column type has empty value
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    FILTER NOT EXISTS {
          ?rd :type ?notExistValue .
    }
}""" ;
    ] ;
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 1.05 - column sequence has empty value
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    FILTER NOT EXISTS {
          ?rd :sequence ?notExistValue .
    }
}""" ;
    ] ;
  kbss-module:has-output-graph-constraint [
      a sp:Ask ;
      sp:text """# 2 - found scope that is not defined in schema ontology
ASK
WHERE {
    ?t csvw:row/csvw:describes ?rd .
    ?rd :scope ?maintenanceGroupAbbr .

    FILTER NOT EXISTS {
         ?maintenanceGroup  dl:has-simple-abbreviation ?maintenanceGroupAbbr .
    }
}""" ;
    ] ;
  km-tabular:data-prefix [
      a sp:str ;
      sp:arg1 : ;
    ] ;
  km-tabular:delimiter "	" ;
  sm:next :construct-csat-maintenance-data ;
.
td:transform-data_Return
  rdfs:label "transform-time-estimate-data" ;
.
<http://onto.fel.cvut.cz/ontologies/csat/time-estimate-0.1>
  a owl:Ontology ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/csat-maintenance> ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/csat/tabular-data-0.1> ;
  owl:imports :input-data-schema ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/s-pipes-lib> ;
.
:construct-csat-maintenance-data
  a sml:ApplyConstruct ;
  sm:next :construct-event-based-attributes ;
  sm:next :transform ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 1 - extract ontology
CONSTRUCT {
    <http://onto.fel.cvut.cz/ontologies/csat-maintenance/time-estimate-12345> a owl:Ontology ;
        owl:imports <http://onto.fel.cvut.cz/ontologies/csat-maintenance> .

    ?workpackageIRI a cm:workpackage, owl:NamedIndividual ;
        cm:id ?WP ;
        cm:has-client ?clientIRI ;
    .

    ?subProjectIRI a cm:sub-project, owl:NamedIndividual ;
           cm:id ?project ;           
    .

    ?taskExecutionIRI   a cm:complex-execution, owl:NamedIndividual ;
        cm:is-part-of-workpackage ?workpackageIRI ;
        cm:has-work-order-step ?taskStepExecutionIRI ;     # TODO --- toto je urcite spravne ????
        cm:is-task-of-defect-class ?defectClasstIRI ;
        cm:is-task-of-sub-project ?subProjectIRI ;
    .

    ?taskStepExecutionIRI a ?taskStepExecutionTypeIRI, owl:NamedIndividual;
        cm:step-index ?workstepTyped ;
    .

    ?scopedTaskStepExecutionIRI a cm:scoped-task-step, ?scopedTaskStepExecutionTypeIRI, owl:NamedIndividual ;
        cm:is-part-of ?taskExecutionIRI ;
        cm:has-scope ?maintenanceGroupIRI ;
    .

    ?addEstimationEventIRI a cm:add-task-estimation, ufo:event ;
        cm:time-estimate-in-hours ?timeEstimateInHours ;
        ufo:has-participant ?scopedTaskStepExecutionIRI ;
    .

    ?maintenanceGroupIRI a cm:maintenance-group ;
        cm:has-abbreviation ?mainMaintenanceGroupAbbr ;
    .

    ?clientIRI a cm:client, owl:NamedIndividual ;
        cm:id ?operator;
    .

     ?defectClasstIRI a cm:defect-class, owl:NamedIndividual ;
           cm:id ?DefectClass ;
     .

} WHERE {
    ?r a csvw:Row .
    ?r csvw:describes ?rd .
    ?r csvw:url ?rUrl .

    ?rd :AC_registration ?AC_registration .
    ?rd :operator ?operator .
    ?rd :WP ?WP .
    ?rd :type ?type .
    OPTIONAL {
      ?rd :WO ?WO .
    }
    OPTIONAL {
      ?rd :TC ?TC .
    }
    OPTIONAL {
      ?rd :defect_class ?DefectClass .
    }
    OPTIONAL {
      ?rd :project ?project .
    }
    ?rd :sequence ?sequence .
    OPTIONAL {
      ?rd :scope ?scope .
    }
    OPTIONAL {
      ?rd :est_min ?est_min  .
    }

    ?maintenanceGroupIRI dl:has-simple-abbreviation ?scope .
    ?maintenanceGroupIRI dl:has-main-abbreviation ?mainMaintenanceGroupAbbr .

    BIND(dl:instance(cm:workpackage, ?WP) as ?workpackageIRI)

    BIND(dl:normalize(?project) as ?subProjectNormalizedId)
    BIND(dl:instance(cm:sub-project, ?subProjectNormalizedId) as ?subProjectIRI)


    BIND(COALESCE(?WO, ?TC) as ?wo_or_tc)
    BIND(dl:instance(cm:complex-execution, dl:id-2(?WP, ?wo_or_tc)) as ?taskExecutionIRI)

    BIND(dl:id-2(?type, ?wo_or_tc) as ?taskTypeId)
    BIND(dl:id-2(?taskTypeId, ?sequence) as ?taskStepExecutionTypeId)

    BIND(dl:instance(cm:task-step-execution-type, ?taskStepExecutionTypeId) as ?taskStepExecutionTypeIRI)
    BIND(dl:instance(cm:task-step-execution, dl:id-2(?WP, ?taskStepExecutionTypeId)) as ?taskStepExecutionIRI)

    BIND(dl:id-2(?taskStepExecutionTypeId, ?scope) as ?scopedTaskStepExecutionTypeId)
    BIND(dl:instance(cm:scoped-task-step-execution-type, ?scopedTaskStepExecutionTypeId) as ?scopedTaskStepExecutionTypeIRI)
    BIND(dl:instance(cm:scoped-task-step-execution, dl:id-2(?WP, ?scopedTaskStepExecutionTypeId)) as ?scopedTaskStepExecutionIRI)

    BIND(STRDT(str(?sequence), xsd:integer) as ?workstepTyped)
    BIND(xsd:decimal(?est_min) as ?timeEstimateInHours)

    BIND(dl:instance(cm:client, ?operator) as ?clientIRI)

    BIND(dl:instance(cm:add-task-estimation, dl:id-3(?WP, ?taskStepExecutionTypeId,md5(str(?rUrl)))) as ?addEstimationEventIRI)

    BIND(lcase(?DefectClass) as ?defectClassId)
    BIND(dl:instance(cm:defect-class, ?defectClassId) as ?defectClasstIRI)
}""" ;
    ] ;
  sml:replace true ;
  rdfs:label "construct-csat-maintenance-data" ;
.
:construct-event-based-attributes
  a sml:ApplyConstruct ;
  sm:next td:merge ;
  sm:nodeX 985 ;
  sm:nodeY 350 ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 0 - time-estimate-in-hours
# TODO not correct - we need to have event identifier in the data
CONSTRUCT {

     ?scopedTaskStepExecutionIRI cm:time-estimate-in-hours ?sumOftimeEstimateInHours .

} WHERE {
   SELECT ?scopedTaskStepExecutionIRI (xsd:decimal(SUM(?timeEstimateInHours)) as ?sumOftimeEstimateInHours)
    WHERE {
            ?addEstimationEventIRI a cm:add-task-estimation  ;
                cm:time-estimate-in-hours ?timeEstimateInHours ;
                ufo:has-participant ?scopedTaskStepExecutionIRI ;
            .
    } GROUP BY ?scopedTaskStepExecutionIRI
}""" ;
    ] ;
  sml:replace true ;
  rdfs:label "construct-event-based-attributes" ;
.
:deploy-time-estimate-data
  a sm:Function ;
  sm:returnModule td:deploy-data_Return ;
  rdfs:subClassOf sm:Functions ;
.
:transform
  a sml:ApplyConstruct ;
  sm:next td:merge ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 1 - convert endDate
CONSTRUCT {
     ?s  cm:end-time ?endDate .
} WHERE {
     ?s  cm:end-timeX ?endDateNotParsed .
#      BIND(spif:parseDate(?endDateNotParsed ,\"dd.MM.yyyy\") as ?endDate)
}""" ;
    ] ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """# 1 - convert issueDate
CONSTRUCT {
     ?s  cm:issue-time ?issueDate .
} WHERE {
     ?s  cm:issue-timeX ?issueDateNotParsed .
#      BIND(spif:parseDate(?issueDateNotParsed ,\"dd.MM.yyyy\") as ?issueDate)
}""" ;
    ] ;
  sml:replace false ;
.
:transform-time-estimate-data
  a sm:Function ;
  sm:returnModule td:transform-data_Return ;
  rdfs:subClassOf sm:Functions ;
.
